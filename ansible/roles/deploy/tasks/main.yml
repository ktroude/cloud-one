---

- name: Uninstall old versions of Docker
  apt:
    name:
      - docker
      - docker-engine
      - docker.io
      - containerd
      - runc
    state: absent
  become: true

- name: Install prerequisites for Docker
  apt:
    name:
      - apt-transport-https
      - ca-certificates
      - curl
      - gnupg
      - lsb-release
    state: present
    update_cache: yes
  become: true

- name: Add Docker's official GPG key
  apt_key:
    url: https://download.docker.com/linux/ubuntu/gpg
    state: present
  become: true

- name: Add Docker repository
  apt_repository:
    repo: "deb [arch=amd64] https://download.docker.com/linux/ubuntu {{ ansible_distribution_release | lower }} stable"
    state: present
    filename: docker
  become: true

- name: Install latest Docker engine and Compose plugin
  apt:
    name:
      - docker-ce
      - docker-ce-cli
      - containerd.io
      - docker-buildx-plugin
      - docker-compose-plugin
    state: present
    update_cache: yes
  become: true

- name: Ensure Docker is started and enabled
  service:
    name: docker
    state: started
    enabled: true
  become: true

- name: Add user to docker group
  user:
    name: "{{ ansible_user }}"
    groups: docker
    append: yes
  become: true

- name: Install UFW
  apt:
    name: ufw
    state: present
    update_cache: yes
  become: true

- name: Enable UFW with default deny policy
  ufw:
    state: enabled
    policy: deny
  become: true

- name: Allow SSH and HTTP/HTTPS
  ufw:
    rule: allow
    port: "{{ item }}"
  loop:
    - 22
    - 80
    - 443
  become: true

- name: Create app deployment directory
  file:
    path: /home/bleotard/inception
    state: directory
    mode: '0755'
    owner: bleotard
    group: bleotard
  become: true

- name: Upload docker-compose.yml
  copy:
    src: files/docker-compose.yml
    dest: /home/bleotard/inception/docker-compose.yml
    owner: bleotard
    group: bleotard
    mode: '0644'
  become: true

- name: Upload .env
  copy:
    src: files/.env
    dest: /home/bleotard/inception/.env
    owner: bleotard
    group: bleotard
    mode: '0644'
  become: true

- name: Upload requirements folder
  copy:
    src: files/requirements
    dest: /home/bleotard/inception/
    owner: bleotard
    group: bleotard
    mode: '0755'
  become: true

- name: Create SSL directory
  file:
    path: /etc/nginx/ssl
    state: directory
    owner: root
    group: root
    mode: '0755'

- name: Generate a self-signed SSL certificate with VM IP as CN
  shell: |
    openssl req -x509 -nodes -days 365 \
      -newkey rsa:2048 \
      -keyout /etc/nginx/ssl/selfsigned.key \
      -out /etc/nginx/ssl/selfsigned.crt \
      -subj "/CN={{ inventory_hostname }}"
  args:
    creates: /etc/nginx/ssl/selfsigned.crt
  when: inventory_hostname in groups['gcp']

- name: Ensure nginx conf directory exists
  file:
    path: /home/bleotard/inception/requirements/nginx/conf
    state: directory
    mode: '0755'
    owner: bleotard
    group: bleotard
  become: true

- name: Upload default.conf template with proper server_name
  template:
    src: default.conf.j2
    dest: /home/bleotard/inception/requirements/nginx/conf/default.conf
    owner: bleotard
    group: bleotard
    mode: '0644'

- name: Ensure local volume directories exist
  file:
    path: "{{ item }}"
    state: directory
    mode: '0755'
    owner: bleotard
    group: bleotard
  with_items:
    - /home/bleotard/data/mariadb
    - /home/bleotard/data/wordpress
  become: true


- name: Run Docker Compose
  command: docker compose up --build -d
  args:
    chdir: /home/bleotard/inception
  become: true

- name: Check if all expected containers are running
  shell: |
    docker ps --format '{{ "{{.Names}}" }}' | grep -E 'nginx|wordpress|mariadb|phpmyadmin'
  register: running_containers
  failed_when: >
    ('nginx' not in running_containers.stdout) or
    ('wordpress' not in running_containers.stdout) or
    ('mariadb' not in running_containers.stdout) or
    ('phpmyadmin' not in running_containers.stdout)
  changed_when: false
